channelGet
0 - client channelGet->get()
1 - client channelGet->serialize (start)
2 - client channelGet->serialize (end)
3 - server channelGet->deserialize request (start)
4 - server channelGet->deserialize request (end)
5 - server channelGet->getDone()
6 - server channelGet->serialize response (start)
7 - server channelGet->serialize response (end)
8 - client channelGet->deserialize (start)
9 - client channelGet->deserialize (end), just before channelGet->getDone() is called



MB_DECLARE_EXPORT(channelGet);

# 10000 - max size
MB_DECLARE(channelGet, 10000);

# in main() to install atexit() hook
MB_INIT;

MB_INC_AUTO_ID(channelGet);
MB_POINT(channelGet, 0, "client channelGet->get()");
MB_POINT(channelGet, 1, "client channelGet->serialize (start)");
MB_POINT(channelGet, 2, "client channelGet->serialize (end)");

MB_INC_AUTO_ID(channelGet);
MB_POINT(channelGet, 3, "server channelGet->deserialize request (start)");
MB_POINT(channelGet, 4, "server channelGet->deserialize request (end)");
MB_POINT(channelGet, 5, "server channelGet->getDone()");
MB_POINT(channelGet, 6, "server channelGet->serialize response (start)");
MB_POINT(channelGet, 7, "server channelGet->serialize response (end)");

MB_POINT(channelGet, 8, "client channelGet->deserialize (start)");
MB_POINT(channelGet, 9, "client channelGet->deserialize (end), just before channelGet->getDone() is called");


----


cat mb* | sort > mb.csv
mb_stat mb.csv 


mb_stat mb.csv -n | grep ,2, | cut -d , -f 3 | gnuplot -p -e "plot '-'"


---


#./bin/linux-x86_64/mb_stat /tmp/mb_test_22576.csv -n | grep -v ",0,0" > /tmp/norm.dat
set datafile separator ","

stat 'norm.dat' using 3 prefix "s0" nooutput
print "s0 ", s0_min, s0_lo_quartile, s0_mean, s0_up_quartile, s0_max

print "s0 ", s0_min, s0_lo_quartile, s0_mean, s0_stddev, s0_up_quartile, s0_max




gnuplot -e 'set datafile separator ","; stat "-" using 3'


# normalize, removes first stage, output stage 1, remove first 10 iterations
./bin/linux-x86_64/mb_stat /tmp/mb_test_22576.csv -n -s 1 -r 10 | gnuplot -e 'set print "-"; set datafile separator ","; stat "-" using 3 prefix "s0" nooutput; print s0_min, s0_lo_quartile, s0_mean, s0_stddev, s0_up_quartile, s0_max'


./bin/linux-x86_64/mb_stat /tmp/mb_test_22576.csv -n | grep "^2," | grep -v ",0,0" | gnuplot -e 'set print "-"; set datafile separator ","; stat "-" using 3 prefix "s0" nooutput; print s0_min, s0_lo_quartile, s0_mean, s0_stddev, s0_up_quartile, s0_max' >> data.dat


plot 'data.dat' using 1:3:2:7:6 with candlesticks

---

# set terminal pngcairo  transparent enhanced font "arial,10" fontscale 1.0 size 500, 350
# set output 'candlesticks.6.png'


set bars front
by3(x) = (((int(x)%3)+1)/6.)
by4(x) = (((int(x)%4)+1)/7.)
rgbfudge(x) = x*51*32768 + (11-x)*51*128 + int(abs(5.5-x)*510/9.)

set boxwidth 0.2 absolute
set title "box-and-whisker with median bar and whiskerbars"
set xrange [ 0 : 6 ] noreverse nowriteback
#plot 'data.dat' using 1:3:2:7:6:1 with candlesticks lc var lt 3 lw 2 title 'Quartiles' whiskerbars, \
#     ''         using 1:4:4:4:4:1 with candlesticks lc var lt -1 lw 2 notitle

#plot 'data.dat' using 1:3:2:7:6:1 with candlesticks lc var fs solid 0.5 border -1 title 'Quartiles' whiskerbars, \
#     ''         using 1:4:4:4:4:1 with candlesticks lc var fs solid 0.5 border -1 notitle

plot 'data.dat' using 1:3:2:7:6:1 with candlesticks lc var fs solid 0.5 noborder title 'Quartiles' whiskerbars, \
     ''         using 1:4:4:4:4:1 with candlesticks lc var fs solid 0.5 noborder notitle

--

ls -1 | grep -v merged | cut -d '_' -f 1 | sort -u | xargs -I {} sh -c "cat {}*.txt | sort > merged_{}.txt"
